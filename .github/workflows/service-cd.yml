name: Service CD Workflow
on:
  push:
    branches: [ main ]
    paths:
      - hm-service/
  pull_request:
    branches: [ main ]
    paths:
      - hm-service/

jobs:
  build:
    runs-on: ubuntu-latest
    environment: hm-service
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v2
      with:
        distribution: temurin
        java-version: '17'

    - name: create application properties file
      working-directory: ./hm-service
      run: |
        touch ./src/main/resources/application-prod.properties
        echo spring.jpa.hibernate.ddl-auto=update >> ./src/main/resources/application-prod.properties
        echo spring.datasource.url=${{ secrets.DATA_SOURCE_URL }} >> ./src/main/resources/application-prod.properties
        echo spring.datasource.username=${{ secrets.DATA_SOURCE_USERNAME }} >> ./src/main/resources/application-prod.properties
        echo spring.datasource.password=${{ secrets.DATA_SOURCE_PASSWORD }} >> ./src/main/resources/application-prod.properties
        echo spring.jpa.database=mysql >> ./src/main/resources/application-prod.properties
        echo hibernate.connection.driver_class = com.mysql.jdbc.Driver >> ./src/main/resources/application-prod.properties
        echo spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl >> ./src/main/resources/application-prod.properties
        echo spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl >> ./src/main/resources/application-prod.properties
        echo hmservice.security.jwtSecret=${{ secrets.JWT_SECRET }} >> ./src/main/resources/application-prod.properties
        echo hmservice.security.jwtExpirationMs = 86400000 >> ./src/main/resources/application-prod.properties

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2

    - name: Execute Gradle Build
      working-directory: ./hm-service
      run: ./gradlew bootJar
